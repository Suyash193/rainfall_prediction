from keras.models import Sequential
from keras.layers import Dense,Input
from keras.callbacks import History
import pandas as pd
from sklearn.cross_validation import train_test_split
import matplotlib.pyplot as plt
from sklearn import metrics
from keras.models import model_from_json
#import numpy as np

x1=int(input('Temperature(C):'))
x2=int(input('Pressure(mB):'))
x3=int(input('Humidity(%):'))
x4=int(input('Cloud cover(%):'))
x5=int(input('Wind speed(mph):'))
x6=int(input('Wind Direction:'))

input_value = [{'temp(c)': x1, 'pressure(mb)': x2, 'humidity()': x3, 'cloud cover()': x4, 'wind speed(mph)': x5, 'wind dir.':x6}]
X_test = pd.DataFrame(input_value)

#input_value=np.array([27,1004,91,79,5])
 
# load json and create model
json_file = open('/home/rajeev/minor_project/model.json', 'r')
loaded_model_json = json_file.read()
json_file.close()
loaded_model = model_from_json(loaded_model_json)
# load weights into new model
loaded_model.load_weights("/home/rajeev/minor_project/model.h5")
#print("Loaded model from disk")
#print(loaded_model)
 
# evaluate loaded model on test data
loaded_model.compile(loss='mean_squared_error', optimizer='adam', metrics=['mse'])
#print(loaded_model)
predictions = loaded_model.predict(X_test)
if(predictions[0]<0):
    predictions[0]=0
#print(predictions)
print("Precipitations(mm):",predictions[0])


